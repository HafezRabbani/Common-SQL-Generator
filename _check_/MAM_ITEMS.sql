SELECT --
 ITEM_ID
,(SELECT SUM(Q.QTY_MONH)
    FROM MAM.MAM_ONHAND_QUANTITIES Q
   WHERE Q.ITEM_ITEM_ID = I.ITEM_ID) AS S_QTY_MONH
,(SELECT LISTAGG(ISI.MSINV_NAM_SUB_INVENTORY_MSINV, ',') WITHIN GROUP(ORDER BY 1)
    FROM (SELECT ISI1.MSINV_NAM_SUB_INVENTORY_MSINV
                ,ISI1.ITEM_ITEM_ID
            FROM MAM.MAM_ITEM_SUB_INVENTORIES ISI1
           WHERE ISI1.FLG_PRIMARY_SUBINVENTORY_MIINV = 1
           GROUP BY ISI1.MSINV_NAM_SUB_INVENTORY_MSINV
                   ,ISI1.ITEM_ITEM_ID) ISI
   WHERE ISI.ITEM_ITEM_ID = I.ITEM_ID) AS SUB_INVENTORIES
,(SELECT U.NAM_UNIT_OF_MEASURE_MUOM
    FROM MAM.MAM_MEASUREMENT_UNITS U
   WHERE I.MUOM_MEASUREMENT_UNIT_ID = U.MEASUREMENT_UNIT_ID) U
,I.MUOM_MEASUREMENT_UNIT_ID
,CASE
   WHEN EXISTS (SELECT NULL
           FROM MAM.MAM_ITEM_SUB_INVENTORIES T
          WHERE T.ITEM_ITEM_ID = I.ITEM_ID
                AND T.FLG_PRIMARY_SUBINVENTORY_MIINV = 1) THEN
    1
 END AS HAS_PRIMARY_LOCATION
,I.COD_OLD_ITEM
,I.COD_ITEM
,I.COD_SERIAL_NUMBER_CONTROL_ITEM AS SERIAL
,I.FLG_LOT_CONTROL_ITEM AS LOT
,I.DES_ITEM
,I.DES_US_ITEM
,I.LKP_UNIT_TEST_ITEM
,I.LKP_UNIT_TEST_ITEM || CASE
   WHEN I.LKP_UNIT_TEST_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_UNIT_TEST_ITEM'), I.LKP_UNIT_TEST_ITEM) AS LKP_UNIT_TEST_ITEM_DES
,I.LKP_TYP_ITEM || CASE
   WHEN I.LKP_TYP_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_TYP_ITEM'), I.LKP_TYP_ITEM) AS LKP_TYP_ITEM_DES
,I.LKP_TYPE_WAY_RCV_ITEM || CASE
   WHEN I.LKP_TYPE_WAY_RCV_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_TYPE_WAY_RCV_ITEM'), I.LKP_TYPE_WAY_RCV_ITEM) AS LKP_TYPE_WAY_RCV_ITEM_DES
,I.LKP_STA_INVENTORY_ITEM
,I.LKP_STA_INVENTORY_ITEM || CASE
   WHEN I.LKP_STA_INVENTORY_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_STA_INVENTORY_ITEM'), I.LKP_STA_INVENTORY_ITEM) AS LKP_STA_INVENTORY_ITEM_DES
,I.LKP_ROUTING_RECEIPT_ITEM || CASE
   WHEN I.LKP_ROUTING_RECEIPT_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_ROUTING_RECEIPT_ITEM'), I.LKP_ROUTING_RECEIPT_ITEM) AS LKP_ROUTING_RECEIPT_ITEM_DES
,I.LKP_COD_SAFETY_ITEM || CASE
   WHEN I.LKP_COD_SAFETY_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_SAFETY_ITEM'), I.LKP_COD_SAFETY_ITEM) AS LKP_COD_SAFETY_ITEM_DES
,I.LKP_COD_PRDFM_SHP_ITEM,I.LKP_COD_PRDFM_SHP_ITEM || CASE
   WHEN I.LKP_COD_PRDFM_SHP_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_PRDFM_SHP_ITEM'), I.LKP_COD_PRDFM_SHP_ITEM) AS LKP_COD_PRDFM_SHP_ITEM_DES
,I.Lkp_Typ_Shp_Item,I.Lkp_Typ_Shp_Item || CASE
   WHEN I.Lkp_Typ_Shp_Item IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('Lkp_Typ_Shp_Item'), I.Lkp_Typ_Shp_Item) AS Lkp_Typ_Shp_Item_DES
,I.LKP_COD_MANAGMENT_MODEL_ITEM || CASE
   WHEN I.LKP_COD_MANAGMENT_MODEL_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_MANAGMENT_MODEL_ITEM'), I.LKP_COD_MANAGMENT_MODEL_ITEM) AS LKP_COD_MANAGMENT_MODEL_IT_DES
,I.LKP_COD_INVENTORY_PLANNING_ITE || CASE
   WHEN I.LKP_COD_INVENTORY_PLANNING_ITE IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_INVENTORY_PLANNING_ITE'), I.LKP_COD_INVENTORY_PLANNING_ITE) AS LKP_COD_INVENTORY_PLANNING_DES
,I.LKP_COD_FAMILY_ITEM
,I.LKP_COD_FAMILY_ITEM || CASE
   WHEN I.LKP_COD_FAMILY_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_FAMILY_ITEM'), I.LKP_COD_FAMILY_ITEM) AS LKP_COD_FAMILY_ITEM_DES
,I.LKP_COD_PLANNING_MAKE_BUY_ITEM || CASE
   WHEN I.LKP_COD_PLANNING_MAKE_BUY_ITEM IS NOT NULL THEN
    ': '
 END ||
 APPS.APP_FND_LOOKUP_PKG.GET_FARSI_MEANING_FUN(UPPER('MAM_ITEMS'), UPPER('LKP_COD_PLANNING_MAKE_BUY_ITEM'), I.LKP_COD_PLANNING_MAKE_BUY_ITEM) AS LKP_COD_PLANNING_MAKE_BUY_DES
,(SELECT P.COD_PLANNER_MPLNR || ': ' || US.NAM_USER_USRS
    FROM MAM.MAM_PLANNERS P
   INNER JOIN FND.FND_USERS US
      ON P.COD_USER_MPLNR = US.IDE_USER_USRS
   WHERE P.COD_PLANNER_MPLNR = I.MPLNR_COD_PLANNER_MPLNR) AS PLANNER
,I.FLG_CUSTOMER_ORDER_ENABLED_ITE AS "ÞÇÈá ÝÑæÔ"
--      ,I.*
  FROM MAM.MAM_ITEMS I
 WHERE 1 = 1
--       AND NVL(I.COD_SERIAL_NUMBER_CONTROL_ITEM, 0) = 1
--       AND I.COD_ITEM LIKE '&COD_ITEM'
AND I.COD_ITEM IN (&COD_ITEM)
--       AND I.COD_ITEM LIKE (SELECT REPLACE(C,CHR(10),'') FROM (SELECT UPPER(TRIM('&COD_ITEM')) AS C FROM DUAL))|| '%'
--       AND I.ITEM_ID IN (&ITEM_ID)
--       AND I.DES_ITEM LIKE '%&DES_ITEM%'
/*
       AND EXISTS
 (SELECT NULL
          FROM MAM.MAM_ONHAND_QUANTITIES Q
         WHERE Q.ITEM_ITEM_ID = I.ITEM_ID HAVING SUM(Q.QTY_MONH) > 0)
*/
   FOR UPDATE
